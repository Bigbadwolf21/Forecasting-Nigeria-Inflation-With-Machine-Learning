{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPQYkeWeLWrcuIBEIOtDNv0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"WLubP290BgZ4","executionInfo":{"status":"ok","timestamp":1728560315864,"user_tz":-60,"elapsed":2348,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}}},"outputs":[],"source":["# Import all the necessary libraries to build and evaluate the inflation model\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.ensemble import GradientBoostingRegressor\n","from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error"]},{"cell_type":"code","source":["# Mount file\n","from google.colab import files\n","file_upload = files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"xo3OEQLcCvd2","executionInfo":{"status":"ok","timestamp":1728560361245,"user_tz":-60,"elapsed":45408,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}},"outputId":"84b9beb9-d6c3-45ab-f889-a045db1afd51"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-5c11ee3a-3672-42ec-8766-161ec218ef86\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-5c11ee3a-3672-42ec-8766-161ec218ef86\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Inflation_Rates - Inflation_Rate.csv to Inflation_Rates - Inflation_Rate.csv\n"]}]},{"cell_type":"code","source":["#Read the dataset\n","data = pd.read_csv(\"Inflation_Rates - Inflation_Rate.csv\")"],"metadata":{"id":"63VdUCg2DeEy","executionInfo":{"status":"ok","timestamp":1728560361247,"user_tz":-60,"elapsed":38,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# General information about the dataset\n","data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"O82IssPZDyUc","executionInfo":{"status":"ok","timestamp":1728560361248,"user_tz":-60,"elapsed":30,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}},"outputId":"f3549f9d-0980-4d05-f530-23dac00ef0b3"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 259 entries, 0 to 258\n","Data columns (total 10 columns):\n"," #   Column                                                            Non-Null Count  Dtype  \n","---  ------                                                            --------------  -----  \n"," 0   Year                                                              259 non-null    int64  \n"," 1   Month                                                             259 non-null    int64  \n"," 2   All Items (Year on Change)                                        259 non-null    float64\n"," 3   All Items (12 Months Avg. Change)                                 259 non-null    float64\n"," 4   Food (Year on Change)/1                                           259 non-null    float64\n"," 5   Food (12 Months Avg. Change)/1                                    259 non-null    float64\n"," 6   All Items Less Farm Produce (Year on Change)/2                    259 non-null    float64\n"," 7   All Items Less Farm Produce (12 Months Avg. Change)/2             259 non-null    float64\n"," 8   All Items Less Farm Produce and Energy (Year on Change)/3         259 non-null    float64\n"," 9   All Items Less Farm Produce and Energy (12 Months Avg. Change)/3  259 non-null    float64\n","dtypes: float64(8), int64(2)\n","memory usage: 20.4 KB\n"]}]},{"cell_type":"code","source":["# Statistical info\n","data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":370},"collapsed":true,"id":"C7XEl7sYGYgN","executionInfo":{"status":"ok","timestamp":1728560361249,"user_tz":-60,"elapsed":23,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}},"outputId":"3947add6-78dd-4fbe-d35b-e51b4a22222d"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Year       Month  All Items (Year on Change)  \\\n","count   259.000000  259.000000                  259.000000   \n","mean   2013.297297    6.432432                   13.708147   \n","std       6.245652    3.451529                    5.906140   \n","min    2003.000000    1.000000                    3.000000   \n","25%    2008.000000    3.000000                    9.525000   \n","50%    2013.000000    6.000000                   12.400000   \n","75%    2019.000000    9.000000                   16.275000   \n","max    2024.000000   12.000000                   34.190000   \n","\n","       All Items (12 Months Avg. Change)  Food (Year on Change)/1  \\\n","count                         259.000000               259.000000   \n","mean                           13.249768                14.758571   \n","std                             4.603366                 7.740080   \n","min                             5.400000                -3.700000   \n","25%                            10.290000                10.000000   \n","50%                            12.600000                13.790000   \n","75%                            16.420000                18.205000   \n","max                            30.760000                40.870000   \n","\n","       Food (12 Months Avg. Change)/1  \\\n","count                      259.000000   \n","mean                        14.109653   \n","std                          6.188117   \n","min                          1.500000   \n","25%                         10.010000   \n","50%                         14.000000   \n","75%                         17.900000   \n","max                         36.360000   \n","\n","       All Items Less Farm Produce (Year on Change)/2  \\\n","count                                      259.000000   \n","mean                                        12.683707   \n","std                                          6.773307   \n","min                                         -0.400000   \n","25%                                          8.820000   \n","50%                                         11.500000   \n","75%                                         14.725000   \n","max                                         41.200000   \n","\n","       All Items Less Farm Produce (12 Months Avg. Change)/2  \\\n","count                                         259.000000       \n","mean                                           12.424788       \n","std                                             5.384768       \n","min                                             4.300000       \n","25%                                             9.105000       \n","50%                                            11.500000       \n","75%                                            13.865000       \n","max                                            33.200000       \n","\n","       All Items Less Farm Produce and Energy (Year on Change)/3  \\\n","count                                         259.000000           \n","mean                                           12.052896           \n","std                                             5.666628           \n","min                                            -6.500000           \n","25%                                             9.090000           \n","50%                                            11.700000           \n","75%                                            14.180000           \n","max                                            27.800000           \n","\n","       All Items Less Farm Produce and Energy (12 Months Avg. Change)/3  \n","count                                         259.000000                 \n","mean                                           11.666564                 \n","std                                             4.397988                 \n","min                                             0.600000                 \n","25%                                             9.300000                 \n","50%                                            11.500000                 \n","75%                                            13.220000                 \n","max                                            24.650000                 "],"text/html":["\n","  <div id=\"df-7ef4b771-2265-4ccd-98d2-ffff0beafefe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>All Items (Year on Change)</th>\n","      <th>All Items (12 Months Avg. Change)</th>\n","      <th>Food (Year on Change)/1</th>\n","      <th>Food (12 Months Avg. Change)/1</th>\n","      <th>All Items Less Farm Produce (Year on Change)/2</th>\n","      <th>All Items Less Farm Produce (12 Months Avg. Change)/2</th>\n","      <th>All Items Less Farm Produce and Energy (Year on Change)/3</th>\n","      <th>All Items Less Farm Produce and Energy (12 Months Avg. Change)/3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>259.000000</td>\n","      <td>259.000000</td>\n","      <td>259.000000</td>\n","      <td>259.000000</td>\n","      <td>259.000000</td>\n","      <td>259.000000</td>\n","      <td>259.000000</td>\n","      <td>259.000000</td>\n","      <td>259.000000</td>\n","      <td>259.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2013.297297</td>\n","      <td>6.432432</td>\n","      <td>13.708147</td>\n","      <td>13.249768</td>\n","      <td>14.758571</td>\n","      <td>14.109653</td>\n","      <td>12.683707</td>\n","      <td>12.424788</td>\n","      <td>12.052896</td>\n","      <td>11.666564</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6.245652</td>\n","      <td>3.451529</td>\n","      <td>5.906140</td>\n","      <td>4.603366</td>\n","      <td>7.740080</td>\n","      <td>6.188117</td>\n","      <td>6.773307</td>\n","      <td>5.384768</td>\n","      <td>5.666628</td>\n","      <td>4.397988</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2003.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>5.400000</td>\n","      <td>-3.700000</td>\n","      <td>1.500000</td>\n","      <td>-0.400000</td>\n","      <td>4.300000</td>\n","      <td>-6.500000</td>\n","      <td>0.600000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2008.000000</td>\n","      <td>3.000000</td>\n","      <td>9.525000</td>\n","      <td>10.290000</td>\n","      <td>10.000000</td>\n","      <td>10.010000</td>\n","      <td>8.820000</td>\n","      <td>9.105000</td>\n","      <td>9.090000</td>\n","      <td>9.300000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2013.000000</td>\n","      <td>6.000000</td>\n","      <td>12.400000</td>\n","      <td>12.600000</td>\n","      <td>13.790000</td>\n","      <td>14.000000</td>\n","      <td>11.500000</td>\n","      <td>11.500000</td>\n","      <td>11.700000</td>\n","      <td>11.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2019.000000</td>\n","      <td>9.000000</td>\n","      <td>16.275000</td>\n","      <td>16.420000</td>\n","      <td>18.205000</td>\n","      <td>17.900000</td>\n","      <td>14.725000</td>\n","      <td>13.865000</td>\n","      <td>14.180000</td>\n","      <td>13.220000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2024.000000</td>\n","      <td>12.000000</td>\n","      <td>34.190000</td>\n","      <td>30.760000</td>\n","      <td>40.870000</td>\n","      <td>36.360000</td>\n","      <td>41.200000</td>\n","      <td>33.200000</td>\n","      <td>27.800000</td>\n","      <td>24.650000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ef4b771-2265-4ccd-98d2-ffff0beafefe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7ef4b771-2265-4ccd-98d2-ffff0beafefe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7ef4b771-2265-4ccd-98d2-ffff0beafefe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-716b8ec1-2255-41bf-869c-e9e34f581324\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-716b8ec1-2255-41bf-869c-e9e34f581324')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-716b8ec1-2255-41bf-869c-e9e34f581324 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 873.2624524366246,\n        \"min\": 6.245652164638957,\n        \"max\": 2024.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2013.2972972972973,\n          2013.0,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 89.5735854299287,\n        \"min\": 1.0,\n        \"max\": 259.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.4324324324324325,\n          6.0,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All Items (Year on Change)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.28134621135413,\n        \"min\": 3.0,\n        \"max\": 259.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          13.708146718146718,\n          12.4,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All Items (12 Months Avg. Change)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.23604803306071,\n        \"min\": 4.603366389574933,\n        \"max\": 259.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          13.24976833976834,\n          12.6,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Food (Year on Change)/1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.34543380006009,\n        \"min\": -3.7,\n        \"max\": 259.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.758571428571425,\n          13.79,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Food (12 Months Avg. Change)/1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.13132692290661,\n        \"min\": 1.5,\n        \"max\": 259.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.109652509652507,\n          14.0,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All Items Less Farm Produce (Year on Change)/2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.6038017276306,\n        \"min\": -0.4,\n        \"max\": 259.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12.683706563706563,\n          11.5,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All Items Less Farm Produce (12 Months Avg. Change)/2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87.49415735319536,\n        \"min\": 4.3,\n        \"max\": 259.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12.424787644787642,\n          11.5,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All Items Less Farm Produce and Energy (Year on Change)/3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88.34494938288168,\n        \"min\": -6.5,\n        \"max\": 259.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12.052895752895752,\n          11.7,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All Items Less Farm Produce and Energy (12 Months Avg. Change)/3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 88.04665387875889,\n        \"min\": 0.6,\n        \"max\": 259.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          11.666563706563705,\n          11.5,\n          259.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Define the feature matrix X and target variable y\n","X = data[['All Items (12 Months Avg. Change)', 'Food (Year on Change)/1', 'Food (12 Months Avg. Change)/1',\n","          'All Items Less Farm Produce (Year on Change)/2', 'All Items Less Farm Produce (12 Months Avg. Change)/2',\n","         'All Items Less Farm Produce and Energy (Year on Change)/3',\n","          'All Items Less Farm Produce and Energy (12 Months Avg. Change)/3']]\n","y = data[ 'All Items (Year on Change)']\n","\n","# Split the data into training and test sets (80% train, 20% test)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Standardize features if necessary\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)"],"metadata":{"id":"u-GBHMDfGuC8","executionInfo":{"status":"ok","timestamp":1728560361249,"user_tz":-60,"elapsed":18,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Instantiate the Gradient Boosting model\n","gbm_model = GradientBoostingRegressor(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)\n","\n","# Train the model\n","gbm_model.fit(X_train_scaled, y_train)\n","\n","# Make predictions on the test set\n","y_pred_gbm = gbm_model.predict(X_test_scaled)"],"metadata":{"id":"EpnDrOXZG8eY","executionInfo":{"status":"ok","timestamp":1728560363113,"user_tz":-60,"elapsed":1881,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# Calculate MSE and R-squared\n","mse_gbm = mean_squared_error(y_test, y_pred_gbm)\n","r2_gbm = r2_score(y_test, y_pred_gbm)\n","rmse_gbm = np.sqrt(mse_gbm)\n","mae_gbm = mean_absolute_error(y_test, y_pred_gbm)\n","mape_gbm = np.mean(np.abs((y_test - y_pred_gbm) / y_test)) * 100\n","\n","print(f'Mean Squared Error (GBM): {mse_gbm}')\n","print(f'Root Mean Squared Error (GBM): {rmse_gbm}')\n","print(f'Mean Absolute Error (GBM): {mae_gbm}')\n","print(f'Mean Absolute Percentage Error (GBM): {mape_gbm}')\n","print(f'R-squared (GBM): {r2_gbm}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bC0uooWHHGFK","executionInfo":{"status":"ok","timestamp":1728560363114,"user_tz":-60,"elapsed":28,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}},"outputId":"a3c0aed0-e188-4bfc-c997-5b7070c4a779"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Squared Error (GBM): 0.7212572229337204\n","Root Mean Squared Error (GBM): 0.8492686400272416\n","Mean Absolute Error (GBM): 0.5447955934784827\n","Mean Absolute Percentage Error (GBM): 4.234596143852635\n","R-squared (GBM): 0.9774703190539686\n"]}]},{"cell_type":"code","source":["# Get feature importances\n","importances_gbm = gbm_model.feature_importances_\n","indices = np.argsort(importances_gbm)\n","\n","# Plot the feature importances\n","plt.figure(figsize=(10,6))\n","plt.title(\"Feature Importances (Gradient Boosting)\")\n","plt.barh(range(len(indices)), importances_gbm[indices], align=\"center\")\n","plt.yticks(range(len(indices)), [X.columns[i] for i in indices])\n","plt.xlabel(\"Relative Importance\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":548},"collapsed":true,"id":"3Us0xxeZHNE9","executionInfo":{"status":"ok","timestamp":1728560363114,"user_tz":-60,"elapsed":25,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}},"outputId":"f8a4c1b5-3634-46b4-9eba-91b16c5a8d85"},"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Residual plot\n","residuals_gbm = y_test - y_pred_gbm\n","\n","plt.figure(figsize=(10,6))\n","plt.scatter(y_pred_gbm, residuals_gbm)\n","plt.axhline(0, color='red', linestyle='--')\n","plt.xlabel('Predicted Values (GBM)')\n","plt.ylabel('Residuals (GBM)')\n","plt.title('Residuals vs. Predicted Values (GBM)')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"collapsed":true,"id":"lhiL2DavHVrV","executionInfo":{"status":"ok","timestamp":1728560363115,"user_tz":-60,"elapsed":22,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}},"outputId":"8d1a3f6f-0bde-4c18-b254-cd611b654670"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Print actual and predicted values\n","for actual, predicted in zip(y_test, y_pred_gbm):\n","    print(f\"Actual: {actual}, Predicted: {predicted}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O4-fSI_DHuBM","executionInfo":{"status":"ok","timestamp":1728560363115,"user_tz":-60,"elapsed":20,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}},"outputId":"442bf391-4cd9-452c-d785-94b72bee0bba"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Actual: 14.0, Predicted: 14.647025498775585\n","Actual: 6.1, Predicted: 7.075878365401315\n","Actual: 23.6, Predicted: 21.041559138664613\n","Actual: 14.6, Predicted: 14.445549205184372\n","Actual: 8.2, Predicted: 8.519395261158927\n","Actual: 10.3, Predicted: 9.945417726370707\n","Actual: 12.26, Predicted: 12.129787079446295\n","Actual: 15.7, Predicted: 15.82426618661345\n","Actual: 8.4, Predicted: 8.743710188576689\n","Actual: 13.71, Predicted: 13.720518008308465\n","Actual: 14.4, Predicted: 15.9875946289708\n","Actual: 18.6, Predicted: 18.780575505901485\n","Actual: 28.2, Predicted: 27.6689402154821\n","Actual: 13.0, Predicted: 13.338642528321158\n","Actual: 7.8, Predicted: 8.896994037211153\n","Actual: 12.6, Predicted: 12.585499196237663\n","Actual: 12.9, Predicted: 15.76793981865539\n","Actual: 26.1, Predicted: 26.174609832094166\n","Actual: 10.2, Predicted: 9.86748323111779\n","Actual: 4.2, Predicted: 4.177723383865786\n","Actual: 9.8, Predicted: 10.2468479602174\n","Actual: 15.9, Predicted: 16.174771546724255\n","Actual: 12.2, Predicted: 12.129787079446295\n","Actual: 15.13, Predicted: 15.908660280560287\n","Actual: 18.72, Predicted: 18.399618771913524\n","Actual: 17.5, Predicted: 19.053383112583163\n","Actual: 8.0, Predicted: 8.106353329810775\n","Actual: 15.63, Predicted: 15.792270377765833\n","Actual: 21.09, Predicted: 21.055553704053153\n","Actual: 8.0, Predicted: 8.122497327561211\n","Actual: 13.0, Predicted: 13.158559287099497\n","Actual: 9.4, Predicted: 9.568921548193622\n","Actual: 12.4, Predicted: 13.51228970375304\n","Actual: 11.24, Predicted: 11.598667856538862\n","Actual: 21.3, Predicted: 21.794686198701157\n","Actual: 11.9, Predicted: 10.29146823862519\n","Actual: 8.6, Predicted: 8.329993076726568\n","Actual: 12.0, Predicted: 11.17708754162058\n","Actual: 13.6, Predicted: 13.195022034828098\n","Actual: 10.9, Predicted: 13.13244340324486\n","Actual: 13.3, Predicted: 13.510827515740779\n","Actual: 10.7, Predicted: 10.605760536232841\n","Actual: 9.0, Predicted: 8.551321902450612\n","Actual: 21.91, Predicted: 21.87649913906046\n","Actual: 11.28, Predicted: 11.349286556833995\n","Actual: 15.98, Predicted: 16.21505283380925\n","Actual: 34.19, Predicted: 33.64864636605481\n","Actual: 11.23, Predicted: 11.286189634666796\n","Actual: 11.61, Predicted: 11.601146352522669\n","Actual: 13.0, Predicted: 12.342094643235852\n","Actual: 18.33, Predicted: 17.879225453083844\n","Actual: 19.8, Predicted: 21.15569654331158\n"]}]},{"cell_type":"code","source":["df_gbm = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred_gbm})"],"metadata":{"id":"CvxxKJJmH8na","executionInfo":{"status":"ok","timestamp":1728560363116,"user_tz":-60,"elapsed":16,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Export to Excel\n","df_gbm.to_excel('gradient_boosting_results.xlsx', index=False)"],"metadata":{"id":"vFF4W-MkNgos","executionInfo":{"status":"ok","timestamp":1728560363116,"user_tz":-60,"elapsed":15,"user":{"displayName":"AYODELE AYOMIDE","userId":"10824171944411540008"}}},"execution_count":13,"outputs":[]}]}